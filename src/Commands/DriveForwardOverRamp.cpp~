// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "DriveForwardOverRamp.h"

DriveForwardOverRamp::DriveForwardOverRamp() {
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::chassis);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	beenOver = 0; //How many times acceleromter limit has been hit
	timeout = 2; //How long to wait if accelermoter not hits
	speed = -0.5;
	overThresh = 4;
	currentTime = 0;
	timer = new Timer();
}

// Called just before this Command runs the first time
void DriveForwardOverRamp::Initialize() {

	Robot::chassis->Reset();

	Robot::chassis->DriveNormal(0,speed,0);

	timer->Reset();
	timer->Start();
	currentTime = 0;
}

// Called repeatedly when this Command is scheduled to run
void DriveForwardOverRamp::Execute() {
	currentTime = timer->Get();
	if ( fabs(RobotMap::BIA->GetZ()) > overThresh && currentTime >0.1) {
		beenOver = true;
		timer->Reset();
		timer->Start();
	}
}

// Make this return true when this Command no longer needs to run execute()
bool DriveForwardOverRamp::IsFinished() {
	if (beenOver && currentTime > 0.3) return true;
	else if (currentTime >= timeout) return true;
	return false;
}

// Called once after isFinished returns true
void DriveForwardOverRamp::End() {
	timer->Stop();
	timer->Reset();
	currentTime = 0;
	Robot::chassis->Stop();
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void DriveForwardOverRamp::Interrupted() {
	End();
}
