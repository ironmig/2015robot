// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "RotateX.h"

RotateX::RotateX(float angle) {
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::chassis);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Angle = angle;
	Speed = 1;
}
RotateX::RotateX(float angle, float speed) {
	Requires(Robot::chassis);
	Angle = angle;
	Speed = speed;
}
// Called just before this Command runs the first time
void RotateX::Initialize() {
	Robot::chassis->Reset();
	Robot::chassis->gyroscope->Reset();
	if (Angle > 0) 	Robot::chassis->DriveNormal(0,0,Speed);
	else if (Angle < 0) Robot::chassis->DriveNormal(0,0,-Speed);
	else this->Cancel();
}

// Called repeatedly when this Command is scheduled to run
void RotateX::Execute() {
	
}

// Make this return true when this Command no longer needs to run execute()
bool RotateX::IsFinished() {
	return (Angle > 0 && Angle >= Robot::chassis->GetGyroAngle())
			|| (Angle < 0 && Angle <= Robot::chassis->GetGyroAngle());
}

// Called once after isFinished returns true
void RotateX::End() {
	Robot::chassis->Stop();
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void RotateX::Interrupted() {
	End();
}
