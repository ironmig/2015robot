// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.




#include "Grabber.h"
#include "../RobotMap.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

Grabber::Grabber() : Subsystem("Grabber") {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	airCompressor = RobotMap::grabberAirCompressor;
	grabberSolenoid = RobotMap::grabberGrabberSolenoid;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONSS
	state = DoubleSolenoid::Value::kOff;
}
    
void Grabber::InitDefaultCommand() {
	// Set the default command for a subsystem here.
	//SetDefaultCommand(new MySpecialCommand());
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
}


// Put methods for controlling this subsystem
// here. Call these from Commands.
void Grabber::Stop() {
	airCompressor->Stop();
	grabberSolenoid->Set(DoubleSolenoid::kOff);
	state = DoubleSolenoid::Value::kOff;
}
void Grabber::Grab() {
	grabberSolenoid->Set(DoubleSolenoid::kReverse);
	state = DoubleSolenoid::Value::kReverse;
}
void Grabber::Release() {
	grabberSolenoid->Set(DoubleSolenoid::kForward);
	state = DoubleSolenoid::Value::kForward;
}
void Grabber::Toggle() {
	if (state == DoubleSolenoid::Value::kForward) Grab();
	else Release();
}
DoubleSolenoid::Value Grabber::Get() {
	return grabberSolenoid->Get();
}
